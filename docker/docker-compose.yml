version: '3.8'

services:
  sai-inference:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: sai-inference
    restart: unless-stopped
    ports:
      - "8888:8888"  # API port
      - "9090:9090"  # Metrics port
    volumes:
      - ../models:/app/models
      - sai-cache:/app/.cache
    environment:
      - SAI_HOST=0.0.0.0
      - SAI_PORT=8888
      - SAI_DEVICE=${SAI_DEVICE:-cpu}
      - SAI_MODEL_DIR=/app/models
      - SAI_DEFAULT_MODEL=${SAI_DEFAULT_MODEL:-sai_v2.1.pt}
      - SAI_CONFIDENCE=${SAI_CONFIDENCE:-0.45}
      - SAI_LOG_LEVEL=${SAI_LOG_LEVEL:-INFO}
      - SAI_API_KEY=${SAI_API_KEY}
      - SAI_REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    networks:
      - sai-network
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G

  redis:
    image: redis:7-alpine
    container_name: sai-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - sai-network

  # Optional: Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: sai-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - sai-network
    profiles:
      - monitoring

networks:
  sai-network:
    driver: bridge

volumes:
  sai-cache:
  redis-data:
  prometheus-data: